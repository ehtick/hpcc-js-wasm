import{_ as t,c as e,a0 as o,o as r}from"./chunks/framework.CE5s5u-i.js";const u=JSON.parse('{"title":"Type Alias: Format","description":"","frontmatter":{},"headers":[],"relativePath":"graphviz/src/graphviz/type-aliases/Format.md","filePath":"graphviz/src/graphviz/type-aliases/Format.md","lastUpdated":null}'),s={name:"graphviz/src/graphviz/type-aliases/Format.md"};function c(i,a,d,n,p,l){return r(),e("div",null,a[0]||(a[0]=[o('<p><a href="/hpcc-js-wasm/README.html"><strong>@hpcc-js/wasm-root</strong></a></p><hr><h1 id="type-alias-format" tabindex="-1">Type Alias: Format <a class="header-anchor" href="#type-alias-format" aria-label="Permalink to &quot;Type Alias: Format&quot;">​</a></h1><blockquote><p><strong>Format</strong>: <code>&quot;svg&quot;</code> | <code>&quot;dot&quot;</code> | <code>&quot;json&quot;</code> | <code>&quot;dot_json&quot;</code> | <code>&quot;xdot_json&quot;</code> | <code>&quot;plain&quot;</code> | <code>&quot;plain-ext&quot;</code> | <code>&quot;canon&quot;</code></p></blockquote><p>Various graphic and data formats for end user, web, documents and other applications. See <a href="https://graphviz.gitlab.io/docs/outputs/" target="_blank" rel="noreferrer">Output Formats</a> for more information.</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/ehtick/hpcc-js-wasm/blob/2c9dd8b0b2d0fcbcaf72ce1ad387627b4d075e3e/packages/graphviz/src/graphviz.ts#L7" target="_blank" rel="noreferrer">graphviz/src/graphviz.ts:7</a></p>',7)]))}const m=t(s,[["render",c]]);export{u as __pageData,m as default};
